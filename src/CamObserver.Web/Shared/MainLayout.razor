@inherits LayoutComponentBase
@using Blazored.Toast.Configuration
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavMgr
@inject IJSRuntime jsRuntime
<PageTitle>CamObserver.Web</PageTitle>
<AuthControl></AuthControl>

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        <MudIconButton Icon="@Icons.Custom.Brands.MudBlazor" Color="Color.Inherit" Link="https://mudblazor.com/" Target="_blank" />
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/MudBlazor/MudBlazor/" Target="_blank" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">CamObserver.Web</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

     [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    async Task Keluar()
    {
        NavMgr.NavigateTo($"/logout",true);
    }
    UserProfileService Userservice;
    string Nama = "Saya";
    protected override async Task OnInitializedAsync()
    {

        if (Userservice == null) Userservice = new UserProfileService();
        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            var UserName = user.Identity.Name;
            Nama = Userservice.GetUserByEmail(UserName)?.FullName;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
        }
    }
}